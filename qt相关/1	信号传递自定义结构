例子一：
1）	在sender头文件中声明新类型
typedef QMap<QString,QSharedPointer<QCPDataContainer<QCPGraphData > > > myMap;
2）	在sender类中添加信号
void SigClickOK(myMap vec);
3）	在Sender的构造函数中添加如下代码
qRegisterMetaType<myMap>("myMap");
4）	在sender触发事件时添加如下代码
QMap<QString,QSharedPointer<QCPDataContainer<QCPGraphData > > > mapReturn;
…
myMap mymap(mapReturn);
	   emit SigClickOK(mymap);
5）	在Receiver中声明接收的结构成员变量
QMap<QString,QSharedPointer<QCPDataContainer<QCPGraphData > > > mainMap;
6） 在Receiver中适当位置连接信号槽  connect(pSamEditDlg,SIGNAL(SigClickOK(myMap)),this,SLOT(OnSampleEditDlgAccept(myMap)));
7） 写Receiver的槽函数
        void CBlockSamplePlotDialog::OnSampleEditDlgAccept(myMap curMap)
{
	      mainMap=curMap;
}

例子二：
1）	在sender头文件中声明新类型
typedef QVector<QVector<QStringList> > myVec;
typedef QPair<QString, double> PAIR; 
2）	在sender类中添加信号
void finished1(myVec rec);
QVector<PAIR> vecIDConf;
3）	在Sender的构造函数中添加如下代码
qRegisterMetaType<myVec>("myVec");
4）	在sender触发事件时添加如下代码
…
myVec vec(vecShpRecords);
	   emit finished1(vec);
5）	在Receiver中声明接收的结构成员变量
QVector<QVector<QStringList> > vecShpRecords;
6）	在Receiver中适当位置连接信号槽connect(task,SIGNAL(finished1(myVec)),this,SLOT(finished1(myVec)),Qt::QueuedConnection);
7） 写Receiver的槽函数
        void CQuaChkDialog::finished1(myVec rec)
{
	       vecShpRecords=rec;
}


